name: Deploy on Push to Main

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. ÏΩîÎìú Ï≤¥ÌÅ¨ÏïÑÏõÉ
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. AWS ÏûêÍ≤© Ï¶ùÎ™Ö ÏÑ§Ï†ï
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 3. ECR Î°úÍ∑∏Ïù∏ ÌõÑ, Ïù¥ÎØ∏ÏßÄ ÎπåÎìú Î∞è ÏóÖÎ°úÎìú
      - name: Build Docker Image and Push to ECR
        run: |
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URI }}
          docker build \
            --build-arg DB_URL=${{ secrets.DB_URL }} \
            --build-arg DB_USERNAME=${{ secrets.DB_USERNAME }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --build-arg JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            --build-arg REDIS_HOST=${{ secrets.REDIS_HOST }} \
            --build-arg REDIS_PORT=${{ secrets.REDIS_PORT }} \
            --build-arg REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} \
            -t pigrest-server .
          docker tag pigrest-server:latest ${{ secrets.AWS_ECR_URI }}/pigrest-server:latest
          docker push ${{ secrets.AWS_ECR_URI }}/pigrest-server:latest

      # 4. ssh key ÏÑ§Ï†ï
      - name: Set SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > pigrest_key.pem
          chmod 600 pigrest_key.pem

      # 5. EC2Ïóê SSH Ï†ëÏÜç ÌõÑ Î∞∞Ìè¨
      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i pigrest_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} "~/server-deploy.sh"

      # 6-1. Î∞∞Ìè¨ Í≤∞Í≥ºÏóê Îî∞Îùº ÌôòÍ≤Ω Î≥ÄÏàò ÏÑ§Ï†ï
      - name: Set default value
        run: |
          echo "RECENT_COMMIT_MESSAGE=$(git log -1 --pretty=format:%s)" >> $GITHUB_ENV
          echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set success color & message
        if: ${{ success() }}
        run: |
          echo "COLOR=5763720" >> $GITHUB_ENV
          echo "DEPLOY_RESULT_MESSAGE=üöÄ YEAH-! Î∞∞Ìè¨ ÏÑ±Í≥µÌñàÍøÄ-!" >> $GITHUB_ENV

      - name: Set failure color & message
        if: ${{ failure() }}
        run: |
          echo "COLOR=16732240" >> $GITHUB_ENV
          echo "DEPLOY_RESULT_MESSAGE=ü§Ø BOOM!!!! Î∞∞Ìè¨ Ïã§Ìå®ÌñàÍøÄ!!!" >> $GITHUB_ENV

      # 6-2. Main Î∏åÎûúÏπòÏóê PushÌï† Îïå, Î∞∞Ìè¨ Í≤∞Í≥º DiscordÎ°ú ÏïåÎ¶º Ï†ÑÏÜ°
      - name: Send Discord Notification (Push to Main Branch)
        uses: Ilshidur/action-discord@master
        if: ${{ always() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          DISCORD_USERNAME: PIGGY
          DISCORD_AVATAR: https://avatars.githubusercontent.com/u/186018866?s=400&u=576494f47a6c179ead62727727a6c3849a3c40c3&v=4
          DISCORD_EMBEDS: |
            [{
              "title": "${{ env.RECENT_COMMIT_MESSAGE }} (${{ env.COMMIT_HASH }})",
              "color": ${{ env.COLOR }},
              "description": "${{ env.DEPLOY_RESULT_MESSAGE }}",
              "fields": [
                {
                  "name": "Repository",
                  "value": "[${{ github.repository }}](https://github.com/${{ github.repository }})",
                  "inline": true
                },
                {
                  "name": "Triggered By",
                  "value": "${{ github.actor }}",
                  "inline": true
                }
              ]
            }]
